# This workflow will download test data and then build
# and verify VideoDeduplication-app Docker image.
name: CI Deduplication

# Execute integration tests on each pull request
# and each push to the development and master branch.
on:
  push:
    branches: [ development, master ]
  pull_request:
    branches: [ development, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: Copy test data
        run: aws s3 cp s3://justiceaitestdata ./tests/test_data --region us-east-1 --recursive --no-sign-request
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Execute Tests
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          file: ./docker/Dockerfile.dedup-cpu
          target: tests
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push CPU Image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: johnhbenetech/videodeduplication:cpu${{ github.ref == 'refs/heads/master' && '' || '-dev' }}
          context: .
          file: ./docker/Dockerfile.dedup-cpu
          target: prod
          build-args: |
            GIT_HASH=${{ github.sha }}
      - name: Build and Push GPU Image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: johnhbenetech/videodeduplication:gpu${{ github.ref == 'refs/heads/master' && '' || '-dev' }}
          context: .
          file: ./docker/Dockerfile.dedup-gpu
          target: prod
          build-args: |
            GIT_HASH=${{ github.sha }}
