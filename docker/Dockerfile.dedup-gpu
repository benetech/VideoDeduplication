# Build image: sudo docker build -t <tag> . -f docker/Dockerfile.dedup-gpu --target prod
# Run tests: sudo docker build -t <tag> . -f docker/Dockerfile.dedup-gpu --target tests

FROM tensorflow/tensorflow:1.15.0-gpu-py3 AS prod

# Install required os dependencies
RUN apt-get update && apt-get install -y curl libsm6 libxext6 libxrender-dev nano libgl1-mesa-glx mediainfo

# Install Anaconda
# See https://docs.anaconda.com/anaconda/install/linux/
ENV PATH=/anaconda/bin:${PATH}
RUN curl -LO https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh && \
    bash Anaconda3-2019.07-Linux-x86_64.sh -p /anaconda -b && \
    rm Anaconda3-2019.07-Linux-x86_64.sh && \
    conda update -y conda


# Install dedup-app Python dependencies
ADD environment-gpu.yaml /tmp/environment.yaml
RUN conda env create -f /tmp/environment.yaml && \
    echo "source activate winnow" > ~/.bashrc

ENV PATH /opt/conda/envs/winnow/bin:$PATH

# Add project files
RUN mkdir /project
ADD . /project/
WORKDIR /project/

# Install application
RUN /bin/bash -c "source activate winnow && \
    pip install -e ."

# Install application CLI tool
RUN pip install -r /project/cli/requirements.txt
ENV PATH /project/cli/bin:$PATH

ARG GIT_HASH=unspecified
LABEL git_hash=$GIT_HASH

# Stage for testing
FROM prod AS tests

RUN /bin/bash -c "source activate winnow &&  bash scripts/run-tests.sh"
